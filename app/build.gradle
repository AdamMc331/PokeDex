apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.gitlab.arturbosch.detekt'

apply from: "../ktlint.gradle"

apply from: "../git-hooks.gradle"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.adammcneilly.pokedex"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.adammcneilly.pokedex.MockTestRunner"
    }
    buildTypes {
        debug {
            buildConfigField "Integer", "PORT", "8080"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        animationsDisabled = true
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

repositories {
    maven {
        url  "http://dl.bintray.com/androidessence/maven"
    }
}

final androidxTestVersion = "1.2.0"
final espressoVersion = "3.2.0"
final androidxTestJunitVersion = "1.1.1"

final androidTestDependencies = [
        androidxcore : "androidx.test:core:${androidxTestVersion}",
        androidxrunner : "androidx.test:runner:${androidxTestVersion}",
        androidxrules : "androidx.test:rules:${androidxTestVersion}",
        androidxjunit : "androidx.test.ext:junit:${androidxTestJunitVersion}",
        espressocore : "androidx.test.espresso:espresso-core:${espressoVersion}",
        mockWebServer : "com.squareup.okhttp3:mockwebserver:3.12.0"
]

final androidxCoreVersion = "1.0.2"
final constraintLayoutVersion = "1.1.1"
final materialDesignVersion = "1.1.0-alpha07"
final lifecycleVersion = "2.0.0"

final androidDependencies = [
        appcompat : "androidx.appcompat:appcompat:${androidxCoreVersion}",
        core : "androidx.core:core-ktx:${androidxCoreVersion}",
        constraintLayout : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
        materialDesign : "com.google.android.material:material:${materialDesignVersion}",
        lifecycle : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
        kotlin : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
]

final retrofitVersion = "2.5.0"
final coroutineAdapterVersion = "0.9.2"
final okhttpVersion = "3.10.0"

final networkDependencies = [
        retrofit : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
        moshiConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
        coroutineAdapter : "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${coroutineAdapterVersion}",
        httpLogging : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
]

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation androidDependencies.values()
    implementation networkDependencies.values()
    implementation 'com.androidessence:materialdesignspecs:2.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
    implementation project(':image-loader')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation 'androidx.arch.core:core-testing:2.0.1'
    androidTestImplementation androidTestDependencies.values()
}

detekt {
    config = rootProject.files('detekt-config.yml')
}
