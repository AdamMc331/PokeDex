// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    ext.ktlint_version = '8.2.0'
    ext.detekt_version = '1.0.1'
    ext.static_analysis_version = '1.0'
    ext.versions_plugin_version = '0.25.0'
    ext.navigation_version = '2.1.0'

    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint_version"
        classpath "com.novoda:gradle-static-analysis-plugin:$static_analysis_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions_plugin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

ext.ReporterType = org.jlleitschuh.gradle.ktlint.reporter.ReporterType

subprojects {
    apply from: "$rootProject.projectDir/staticanalysis.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    // We install the hook at the first occasion
    tasks['clean'].dependsOn addKtlintFormatGitPreCommitHook
}

/**
 * This is a special task that allows us to pass a flag to avoid any tasks with Lint in the name.
 *
 * To use, you can call `./gradlew build -PnoLint` from the command line.
 *
 * https://kousenit.org/2016/04/20/excluding-gradle-tasks-with-a-name-pattern/
 */
gradle.taskGraph.whenReady { graph ->
    if (project.hasProperty('noLint')) {
        graph.allTasks.findAll { it.name ==~ /.*lint.*/ }*.enabled = false
    }
}

apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "org.jlleitschuh.gradle.ktlint-idea"
apply plugin: "com.github.ben-manes.versions"

dependencyUpdates {
    checkForGradleUpdate = true
    resolutionStrategy {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
                }

                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}
